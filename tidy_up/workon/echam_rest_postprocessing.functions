

echam_post_process_help()
{
        echo "Available postprocessing options for echam:"
        echo "  BOT" 
        echo "  LOG"    
        echo "  MM"
        echo "  ..."
        echo "Set: MEANTAGS_echam=\"BOT MM\" (for example)"
}

echam_post_process()
{

	        cd $POST_DIR
        mecho 'echam post-processing started'

        if files=$(double_loop ${EXP_ID}_echam6_SUBSTREAM1_SUBSTREAM2.grb); then
                while read -r file stream ym; do
                        for meantag in $MEANTAGS_echam; do      
                                while (( $(jobs -p | wc -l) >=  max_jobs )); do sleep $sleep_time; done
                                call_if_exists echam_post_process_${meantag}
                        done
                done <<< $files
        fi
        if files=$(double_loop ${EXP_ID}_echam6_SUBSTREAM1_SUBSTREAM2.nc); then
                while read -r file stream ym; do
                        for meantag in $MEANTAGS_echam; do      
                                while (( $(jobs -p | wc -l) >=  max_jobs )); do sleep $sleep_time; done
                                call_if_exists echam_post_process_${meantag}
                        done
                done <<< $files
        fi

        CONCATENATE_POST_PROCESS_echam=${CONCATENATE_POST_PROCESS_echam:-0}

        if [[ "x${CONCATENATE_POST_PROCESS_echam}" = "x1" ]]; then

                mecho 'ECHAM concatenation started'
                for meantag in $MEANTAGS_echam; do
                        case $meantag in 
                                BOT | ATM | LOG | co2 | QBO | tracer )
                                        if files=$(ls ${EXP_ID}_echam6_${meantag}_mm_*.nc); then
                                                output=${EXP_ID}_echam6_${meantag}_${startdate}-${enddate}.nc
                                                time_merge $output $files
                                                add_to ${POST_DIR}/$output $output output
                                        fi
                                        ;;
                                mm | dm | ym )
                                        if files=$(double_loop ${meantag}_echam6_SUBSTREAM1_SUBSTREAM2.nc); then
                                        newstream=0
                                        thesefiles="NONE"
                                        while read -r file stream ym; do
                                                if ! [[ "x$stream" = "x$laststream" ]]; then
                                                        if ! [[ "x${thesefiles}" = "xNONE" ]]; then
                                                                output=${meantag}_echam6_${laststream}_${startdate}-${enddate}.nc
                                                                time_merge $output $thesefiles
                                                                add_to ${POST_DIR}/$output $output output
                                                        fi
                                                        thesefiles=$file
                                                else
                                                        thesefiles="$thesefiles $file"
                                                fi
                                                laststream=$stream
                                        done <<< $files
                                        fi
                                        ;;
                        esac
                done
        fi

        TAR_RAW_OUTPUT_echam=${TAR_RAW_OUTPUT_echam:-0}
        TAR_FREQ=${TAR_FREQ:-1}

        mod=$(( RUN_NUMBER_echam % TAR_FREQ ))
        if [[ "$mod" = "0" ]]; then
                TAR_RAW_OUTPUT_echam=${TAR_RAW_OUTPUT_echam:-1}
        else
                TAR_RAW_OUTPUT_echam=${TAR_RAW_OUTPUT_echam:-0}
        fi

        if [[ "x${TAR_RAW_OUTPUT_echam}" = "x1" ]]; then
                cd ${RESTART_DIR_echam}
		if ! [[ -e ${EXP_ID}_echam6_raw_restarts_${END_DATE_echam}.tar.gz ]]; then
                        # --use-compress-program=pigz -cvf 
			tar --create $tar_compress_program ${TAR_DIR}/${EXP_ID}_echam6_raw_restarts_${END_DATE_echam}.tar.gz restart_${EXP_ID}_*_${END_DATE_echam}.nc
                else
			tar --append $tar_compress_program ${TAR_DIR}/${EXP_ID}_echam6_raw_restarts_${END_DATE_echam}.tar.gz restart_${EXP_ID}_*_${END_DATE_echam}.nc
                fi
                cd ${DATA_DIR_echam}
		if ! [[ -e ${EXP_ID}_echam6_raw_output_${END_DATE_echam}.tar.gz ]]; then
                        # --use-compress-program=pigz -cvf 
			tar --create $tar_compress_program ${TAR_DIR}/${EXP_ID}_echam6_raw_output_${END_DATE_echam}.tar.gz ${EXP_ID}_echam6_*_$(echo ${END_DATE_echam} | head -c4)*.grb
                else
			tar --append $tar_compress_program ${TAR_DIR}/${EXP_ID}_echam6_raw_output_${END_DATE_echam}.tar.gz ${EXP_ID}_echam6_*_$(echo ${END_DATE_echam} | head -c4)*.grb
                fi
        fi

        ARCHIVE_TAR_OUTPUT_echam=${ARCHIVE_TAR_OUTPUT_echam:-0}

        if [[ "x${ARCHIVE_TAR_OUTPUT_echam}" = "x1" ]]; then
                if [[ "x${TAR_RAW_OUTPUT_echam}" = "x1" ]]; then
                        call_if_exists $archive_tars "${TAR_DIR}/\*.tar.gz"
                fi
        fi

        cd $SCRIPT_DIR
}

