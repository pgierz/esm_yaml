#!/usr/bin/ksh


mpirun_prepare_execution()
{
        my_mpirun_hosts=hostfile_mpirun
        execution_command_file="execution_command"
        mecho "my_mpirun_hosts=${my_mpirun_hosts}"

        [[ -e $my_mpirun_hosts ]] && ${rm} -f $my_mpirun_hosts

        echo "          Binding of executables to threads: (hostfile_mpirun)"
        my_mpirun_np=""
        for model in ${coupled_setup_executable_list}
        do
                eval new_start=\${offset_${model}}
                mecho "Processing model ${model}"
                eval nb_of_cores=\${tasks_${model}}
                mecho "tasks_model ${nb_of_cores}"
                new_end=$(( new_start + nb_of_cores - 1))
                mecho "new_end ${new_end}"
                mecho "new_start ${new_start}"
                eval this_cmd=\${COMMAND_${model}:-ERR}
                echo "this_cmd " $this_cmd
                #this_exe_full=$(readlink -f ${this_exe})
                #echo "this_exe_full " $this_exe_full
                echo "-np ${nb_of_cores}  ${this_cmd}" >> $my_mpirun_hosts
                echo "                  ${new_start}-${new_end}  ./${this_cmd}"
                if [[ "x${my_mpirun_np}" = "x" ]]
                then 
                    my_mpirun_np="-n ${nb_of_cores} ./${this_cmd}"
                else
                    my_mpirun_np="${my_mpirun_np} : -n ${nb_of_cores} ./${this_cmd}"
                fi
        done
        if [[ "x${verbose}" = "x1" ]]
        then
                cat $my_mpirun_hosts >> $dumpfile
        fi

        final_execution_command="$launcher $launcher_flags ${my_mpirun_np} "
        echo "${final_execution_command}" >> $execution_command_file
}
